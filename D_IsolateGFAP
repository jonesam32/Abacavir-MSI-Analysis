%Defining color thresholds for DAB staining of GFAP
cform = makecform('srgb2lab', 'AdaptedWhitePoint', whitepoint('D65'));
% Define thresholds for channel 1 based on histogram settings
channel1Min = 35.125;
channel1Max = 55.509;
% Define thresholds for channel 2 based on histogram settings
channel2Min = -2.513;
channel2Max = 7.547;
% Define thresholds for channel 3 based on histogram settings
channel3Min = -0.436;
channel3Max = 35.898;
%Isolating GFAP stain based on color threshold
IHC=im2double(io);
LABspace=applycform(IHC,cform);
GFAPmask=(LABspace(:,:,1) >= channel1Min ) & (LABspace(:,:,1) <= channel1Max) & ...
    (LABspace(:,:,2) >= channel2Min ) & (LABspace(:,:,2) <= channel2Max) & ...
    (LABspace(:,:,3) >= channel3Min ) & (LABspace(:,:,3) <= channel3Max);
GFAP=IHC;
GFAP(repmat(~GFAPmask,[1 1 3])) = 0;
GFAP=rgb2gray(GFAP);
slice=rgb2gray(IHC);
slice=imcomplement(slice);
slice=slice.*(slice>0.1);
%slice=imadjust(slice);
clear LABspace IHC;
%Show images of the GFAP and section as a check to make sure thresholding
%worked
figure('Position', [1 500 dims.IHC(2)*.035 dims.IHC(1)*.035])
imagesc(GFAP)
figure('Position', [1 500 dims.IHC(2)*.035 dims.IHC(1)*.035])
imagesc(slice)
% GFAP_red=GFAP(:,:,1);
% GFAP_red=GFAP_red.*GFAPmask;
% invert_r=imcomplement(GFAP_red);
% invert_r=invert_r.*GFAPmask;
% figure('Position', [1 500 dims.IHC(2)*.035 dims.IHC(1)*.035])
% imagesc(GFAP_red)
% 
% slice_blue=slice(:,:,3);
% invert_b=imcomplement(slice_blue);
% figure('Position', [1 500 dims.IHC(2)*.035 dims.IHC(1)*.035])
% imagesc(invert_b)
GFAP_single=min(GFAP(GFAP>0));
GFAP_stats(1)=GFAP_single;
GFAP_total=sum(GFAP(:));
GFAP_stats(2)=GFAP_total;
GFAP_count=GFAP_total/GFAP_single;
GFAP_stats(3)=GFAP_count;
GFAP_area=nnz(GFAP);
GFAP_stats(4)=GFAP_area;
slice_area=nnz(slice);
GFAP_stats(5)=slice_area;
GFAP_fraction=GFAP_area/slice_area;
GFAP_stats(6)=GFAP_fraction;
GFAP_stats=transpose(GFAP_stats);
